name: Deploy Django app to Azure

on:
  pull_request:
    branches: [ 'main']
  
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2
            - name: Setup Environment variables
              run: |
                mv BasketSaverUserService/.env-azure.example BasketSaverUserService/.env
                mv BasketSaverCatalogService/.env-azure.example BasketSaverCatalogService/.env
                mv BasketSaverGroceryListService/.env-azure.example BasketSaverGroceryListService/.env
            - name: Login to Azure
              uses: azure/login@v1
              with:
                creds: ${{secrets.AZURE_CREDS}}
            - name: Azure Container Registry Login
              run: |
                az acr login --name basketsaverregistry.azurecr.io
            - name: Build docker images
              run: |
                docker build -f ./BasketSaverCatalogService/Dockerfile.backend ./BasketSaverCatalogService/. -t basketsaverregistry.azurecr.io/basketsaver/basketsaver-catalogservice:latest
                docker build -f ./BasketSaverGroceryListService/Dockerfile.backend ./BasketSaverGroceryListService/. -t basketsaverregistry.azurecr.io/basketsaver/basketsaver-grocerylistservice:latest
                docker build -f ./BasketSaverUserService/Dockerfile.backend ./BasketSaverUserService/. -t basketsaverregistry.azurecr.io/basketsaver/basketsaver-userservice:latest
                docker push basketsaverregistry.azurecr.io/basketsaver/basketsaver-catalogservice:latest
                docker push basketsaverregistry.azurecr.io/basketsaver/basketsaver-grocerylistservice:latest
                docker push basketsaverregistry.azurecr.io/basketsaver/basketsaver-userservice:latest
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Azure Login
            uses: azure/login@v1
            with:
              creds: ${{secrets.AZURE_CREDS}}
          - name: Deleting existing instance if it exists
            run: |
              az container delete --resource-group BasketSaver --name basketsavercatalogservice --yes || echo "No basketsavercatalogservice instance to delete"
              az container delete --resource-group BasketSaver --name basketsavergroceryservice --yes || echo "No basketsavergrocerservice instance to delete"
              az container delete --resource-group BasketSaver --name basketsaveruserservice --yes || echo "No basketsaveruserservice instance to delete"
          - name: Deploy to Azure Container Instance
            run: | 
              az container create \
                --resource-group BasketSaver \
                --name basketsavercatalogservice \
                --registry-username BasketSaverRegistry \
                --registry-password ${{secrets.AZURE_REG_PASS}} \
                --image basketsaverregistry.azurecr.io/basketsaver/basketsaver-catalogservice:latest \
                --cpu 1 \
                --memory 1.5 \
                --ports 8000 \
                --dns-name-label basketsavercatalogpublic \
                --environment-variables MYSQL_HOST=${{secrets.AZURE_CATALOG_DB}} MYSQL_DATABASE=development MYSQL_USER=bsadmin MYSQL_PORT=5432 MYSQL_PASSWORD=${{secrets.AZURE_DB_PASS}} RABBIT_HOST=myrabbitmq.westeurope.azurecontainer.io \
                --command-line "/bin/bash -c 'gunicorn --workers 3 --bind 0.0.0.0:8000 bscatalogservice.wsgi:application'" \
                --restart-policy Always \
                --location westeurope
              az container create \
                --resource-group BasketSaver \
                --name basketsaveruserservice \
                --registry-username BasketSaverRegistry \
                --registry-password ${{secrets.AZURE_REG_PASS}} \
                --image basketsaverregistry.azurecr.io/basketsaver/basketsaver-userservice:latest \
                --cpu 1 \
                --memory 1.5 \
                --ports 8000 \
                --dns-name-label basketsaveruserpublic \
                --environment-variables MYSQL_HOST=${{secrets.AZURE_USER_DB}} MYSQL_DATABASE=development MYSQL_USER=bsadmin MYSQL_PORT=5432 MYSQL_PASSWORD=${{secrets.AZURE_DB_PASS}} RABBIT_HOST=myrabbitmq.westeurope.azurecontainer.io \
                --command-line "/bin/bash -c 'gunicorn --workers 3 --bind 0.0.0.0:8000 bsuserservice.wsgi:application'" \
                --restart-policy Always \
                --location westeurope
              az container create \
                --resource-group BasketSaver \
                --name basketsavergroceryservice \
                --registry-username BasketSaverRegistry \
                --registry-password ${{secrets.AZURE_REG_PASS}} \
                --image basketsaverregistry.azurecr.io/basketsaver/basketsaver-grocerylistservice:latest \
                --cpu 1 \
                --memory 1.5 \
                --ports 8000 \
                --dns-name-label basketsavergrocerypublic \
                --environment-variables MYSQL_HOST=${{secrets.AZURE_GROCERY_DB}} MYSQL_DATABASE=development MYSQL_USER=bsadmin MYSQL_PORT=5432 MYSQL_PASSWORD=${{secrets.AZURE_DB_PASS}} RABBIT_HOST=myrabbitmq.westeurope.azurecontainer.io \
                --command-line "/bin/bash -c 'gunicorn --workers 3 --bind 0.0.0.0:8000 bsgroceryservice.wsgi:application'" \
                --restart-policy Always \
                --location westeurope
              az container create \
                --resource-group BasketSaver \
                --name myrabbitmq \
                --image rabbitmq:3-management \
                --cpu 1 \
                --memory 1.5 \
                --ports 5672 15672 \
                --dns-name-label myrabbitmq \
                --environment-variables RABBITMQ_DEFAULT_USER=bsrabbit RABBITMQ_DEFAULT_PASS=${{secrets.RABBITMQ_PASS}} \
                --restart-policy Always \
                --location westeurope